<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <help_text>// Uncomment the following line to change the fontsize and font:
fontsize=10
// fontfamily=SansSerif //possible: SansSerif,Serif,Monospaced


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use +/- or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text>
  <zoom_level>8</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>536</x>
      <y>328</y>
      <w>192</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>Game
--
-window: sf::RenderWindow
-data: std::unique_ptr&lt;SaveData&gt;
-settings: std::unique_ptr&lt;Settings&gt;
--
+start()
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>888</x>
      <y>40</y>
      <w>360</w>
      <h>248</h>
    </coordinates>
    <panel_attributes>Map
--
-window: sf::RenderWindow*
-width: int
-height: int
-background_texture: sf::Texture
-background: sf::Sprite
-enemy_counts: std::vector&lt;int&gt;
-spawn_locations: std::vector&lt;sf::IntRect&gt;
-projectile_textures: std::vector&lt;sf::Texture&gt;
-enemy_textures: std::vector&lt;std::vector&lt;sf::Texture\&gt;&gt;
--
+draw()
+getWidth(): int
+getHeight(): int
+getEnemyCounts(): const std::vector&lt;int&gt;*
+getSpawnLocations(): const std::vector&lt;sf::IntRect&gt;*
+getProjectileTextures(): const std::vector&lt;sf::Texture&gt;*
+getEnemyTextures(x: EnemyType): const std::vector&lt;sf::Texture&gt;*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2064</x>
      <y>328</y>
      <w>168</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>Zombie
--

--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1840</x>
      <y>328</y>
      <w>168</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>Enemy
--
-health: int
-maxHealth: int
--
+update()
+die()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1840</x>
      <y>528</y>
      <w>208</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>Player
--
-textures: std::vector&lt;sf::Texture&gt;
-data: SaveData*
-equipped: int
--
+update()
+shoot(mouse_x: int, mouse_y: int)
+equip(type: WeaponType)
+unlock_weapon(type: WeaponType)
+hurt(amount: int)
+heal(amount: int)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1136</x>
      <y>328</y>
      <w>288</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>EntityManager
--
-map: Map*
-player: Player
-projectiles: std::list&lt;Projectile&gt;
-enemies: std::list&lt;std::unique_ptr&lt;Enemy\&gt;&gt;
-dead_enemies: std::queue&lt;std::unique_ptr&lt;Enemy\&gt;&gt;
-window: sf::RenderWindow*
-settings: const Settings*
--
-updatePlayer()
-updateProjectiles()
-updateEnemies()
+update()
+handleEvent(event sf::Event&amp;)
+draw()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1496</x>
      <y>328</y>
      <w>168</w>
      <h>136</h>
    </coordinates>
    <panel_attributes>Entity
--
-window: sf::RenderWindow*
-map: Map*
#sprite: sf::Sprite
#speed: float
--
/+update()/
+isTouching(obj: Entity*): bool
+move(x: int, y: int)
+draw()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2064</x>
      <y>424</y>
      <w>168</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>Bullet
--

--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1840</x>
      <y>424</y>
      <w>168</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>Projectile
--

--
+update()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1656</x>
      <y>360</y>
      <w>200</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;230.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2000</x>
      <y>360</y>
      <w>80</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2000</x>
      <y>464</y>
      <w>80</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1416</x>
      <y>360</y>
      <w>96</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;100.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>280</x>
      <y>648</y>
      <w>448</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>FileManager
--

--
_+loadMap(map_name: std::string, window: sf::RenderWindow): std::unique_ptr&lt;Map&gt;_
_+loadSave(save_name: std::string): std::unique_ptr&lt;SaveData&gt;_
_+writeSave(data: SaveData*, name: std::string)_
_+loadSettings(): std::unique_ptr&lt;Settings&gt;_
_+saveSettings(settings: Settings*)_</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1872</x>
      <y>744</y>
      <w>112</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>SaveData
--
+money: int
+health: int
+maxHealth: int
+baseSpeed: float
+weapons: bool[]
+ammo: int[]
+magazines: short[]
+grenades: int

+skins: bool[]
+active_skin: Skin

+kills: int[]</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>304</y>
      <w>168</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>SoundManager
--

--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>576</x>
      <y>184</y>
      <w>136</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>CustomEvent
--
+type: CustomEventType
+data: void*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1912</x>
      <y>712</y>
      <w>24</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;40.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>544</x>
      <y>40</y>
      <w>272</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>CustomEventQueue
--
-events: std::queue&lt;CustomEvent&gt;
-mtx: std::mutex
--
+queueEvent(x: CustomEvent)
+queueEvent(type: CustomEventType, data: void*)
+nextEvent(): CustomEvent</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>632</x>
      <y>144</y>
      <w>24</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>720</x>
      <y>184</y>
      <w>104</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enum&gt;&gt;
CustomEventType
--
Pause
GameOver</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>328</x>
      <y>8</y>
      <w>168</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>Logger
--
_-errLock: std::mutex_
--
+logErr(err: std::string)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1256</x>
      <y>40</y>
      <w>104</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enum&gt;&gt;
EnemyType
--
Zombie</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1656</x>
      <y>360</y>
      <w>200</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;110.0;10.0;110.0;140.0;230.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1656</x>
      <y>360</y>
      <w>200</w>
      <h>280</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;110.0;10.0;110.0;330.0;230.0;330.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2056</x>
      <y>528</y>
      <w>88</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enum&gt;&gt;
WeaponType
--
Pistol</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>896</x>
      <y>328</y>
      <w>168</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>PlayState
--
-window: sf::RenderWindow*
-view: sf::View
-entities: EntityManager
-map: std::unique_ptr&lt;Map&gt;
-data: SaveData*
--
+set(): CustomEventType</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>896</x>
      <y>920</y>
      <w>168</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>MainMenuState
--
-data: SaveData*
-settings: Settings*
--
set(): CustomEventType</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>896</x>
      <y>552</y>
      <w>168</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>PausedState
--
-data: SaveData*
--
set(): CustomEventType</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>896</x>
      <y>696</y>
      <w>168</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>ShopState
--
-data: SaveData*
--
set(): CustomEventType</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1056</x>
      <y>400</y>
      <w>96</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>100.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>720</x>
      <y>392</y>
      <w>192</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>220.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>720</x>
      <y>392</y>
      <w>192</w>
      <h>224</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>220.0;260.0;120.0;260.0;120.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>720</x>
      <y>392</y>
      <w>192</w>
      <h>408</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>220.0;490.0;120.0;490.0;120.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>720</x>
      <y>392</y>
      <w>192</w>
      <h>632</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>220.0;770.0;120.0;770.0;120.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>632</x>
      <y>472</y>
      <w>24</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;220.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1408</x>
      <y>696</y>
      <w>232</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>Button
--
-window: sf::RenderWindow*
-texture: sf::Texture
-sprite: sf::Sprite
--
/+onClick()/
+isClicked(mouse_x: int, mouse_y: int): bool
+draw()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>272</x>
      <y>312</y>
      <w>248</w>
      <h>312</h>
    </coordinates>
    <panel_attributes>&lt;&lt;struct&gt;&gt;
Settings
--
+fullscreen: bool
+resolution_width: int
+resolution_height: int

+key_primary: sf::Keyboard::Key
+key_secondary: sf::Keyboard::Key
+key_reload: sf::Keyboard::Key
+key_grenade: sf::Keyboard::Key
+key_move_up: sf::Keyboard::Key
+key_move_left: sf::Keyboard::Key
+key_move_down: sf::Keyboard::Key
+key_move_right: sf::Keyboard::Key

+default_background_texture_path: std::string
+default_player_texture_path: std::string
+default_projectile_texture_path: std::string
+default_enemy_texture_path: std::string
+default_button_texture_path: std::string
+default_font_path: std::string

+default_spawn_zones: std::vector&lt;sf::IntRect&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1176</x>
      <y>696</y>
      <w>184</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>Menu
--
-background_texture: sf::Texture
-background: sf::Sprite
-buttons: std::list&lt;Button&gt;
--
+checkButtons()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1224</x>
      <y>856</y>
      <w>72</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enum&gt;&gt;
MenuType
--
Pause
Shop
Main
Options</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1056</x>
      <y>760</y>
      <w>136</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>150.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1056</x>
      <y>584</y>
      <w>136</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>150.0;230.0;80.0;230.0;80.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1056</x>
      <y>760</y>
      <w>136</w>
      <h>256</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>150.0;10.0;80.0;10.0;80.0;300.0;10.0;300.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1352</x>
      <y>760</y>
      <w>72</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;70.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2056</x>
      <y>632</y>
      <w>88</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enum&gt;&gt;
PlayerSkin
--
Default</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1408</x>
      <y>848</y>
      <w>120</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>DefaultSettingsButton
--
-settings: Settings*
--
+onClick()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1456</x>
      <y>808</y>
      <w>24</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>304</x>
      <y>192</y>
      <w>240</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>MessageBox
--

--
</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
